name: Content Update (Issue Driven)

on:
  issues:
    types: [opened, edited]

permissions:
  contents: write
  issues: read

jobs:
  update-content:
    if: contains(github.event.issue.labels.*.name, 'content-update')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Parse issue body to JSON files
        id: parse
        run: |
          echo "Issue body:\n${{ github.event.issue.body }}" > issue.md
          # Expect fenced code blocks with json and filenames e.g. ```json content.json { ... }
          node - <<'EOF'
          import { readFileSync, writeFileSync } from 'node:fs';
          const body = readFileSync('issue.md','utf8');
          const regex = /```json\s+([\w.-/]+)\s+([\s\S]*?)```/g;
          let m, wrote = [];
          while ((m = regex.exec(body))) {
            const file = m[1];
            try {
              JSON.parse(m[2]);
              writeFileSync(file, JSON.stringify(JSON.parse(m[2]), null, 2) + '\n');
              wrote.push(file);
            } catch (e) {
              console.log('Invalid JSON for', file, e.message);
            }
          }
          if (!wrote.length) {
            console.log('No valid JSON blocks found.');
            process.exit(0);
          }
          console.log('Updated files:', wrote.join(', '));
          writeFileSync('updated-files.txt', wrote.join('\n'));
          EOF
      - name: Commit changes
        if: success()
        run: |
          if [ -f updated-files.txt ]; then
            git config user.name 'github-actions';
            git config user.email 'actions@users.noreply.github.com';
            git add $(cat updated-files.txt) || true
            if git diff --cached --quiet; then
              echo 'No changes to commit.'
            else
              git commit -m 'chore(content): update content via issue #${{ github.event.issue.number }}'
              git push origin HEAD:${{ github.ref_name }}
            fi
          fi