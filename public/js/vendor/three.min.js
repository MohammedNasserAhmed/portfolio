/* eslint-disable */
// Lightweight loader for three.js that avoids ESM bare specifier issues in static hosting.
// It dynamically injects a script tag pointing to a CDN UMD build and resolves when THREE is available.
// License: three.js is MIT licensed â€“ see https://github.com/mrdoob/three.js/blob/dev/LICENSE

if (!window.THREE) {
	const script = document.createElement('script');
	// Use a pinned version compatible with our code; adjust if needed.
	script.src = 'https://unpkg.com/three@0.152.2/build/three.min.js';
	script.async = true;
	document.head.appendChild(script);
}

export default new Promise((resolve, reject) => {
	if (window.THREE) return resolve(window.THREE);
	const onLoad = () => {
		if (window.THREE) {
			resolve(window.THREE);
		} else {
			reject(new Error('THREE failed to load'));
		}
		cleanup();
	};
	const onError = () => {
		cleanup();
		reject(new Error('Failed to load three.js'));
	};
	const cleanup = () => {
		window.removeEventListener('three-loaded', onLoad);
		document.removeEventListener('error', onError, true);
	};
	// Fallback: observe when the script populates window.THREE
	const checkInterval = setInterval(() => {
		if (window.THREE) {
			clearInterval(checkInterval);
			onLoad();
		}
	}, 50);
	// Safety timeout
	setTimeout(() => {
		clearInterval(checkInterval);
		if (!window.THREE) onError();
	}, 8000);
});
window.THREE = THREE;
